name: Node.js CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  install:
    name: Install node modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: get-yarn-cache-dir
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.get-yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install --frozen-lockfile --prefer-offline

    outputs:
      yarn-cache-dir: ${{ steps.get-yarn-cache-dir.outputs.dir }}

  lints:
    name: Check lints
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache/restore@v3
        name: Restore yarn cache
        id: yarn-cache
        with:
          path: ${{ needs.install.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile --prefer-offline

      - name: prettier
        run: yarn check:prettier

      - name: eslint
        run: yarn check:eslint --format junit -o reports/junit/js-lint-results.xml

  types:
    name: Check types
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache/restore@v3
        name: Restore yarn cache
        id: yarn-cache
        with:
          path: ${{ needs.install.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile --prefer-offline

      - name: types
        run: yarn check:ts

  deps:
    name: Check dependencies
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache/restore@v3
        name: Restore yarn cache
        id: yarn-cache
        with:
          path: ${{ needs.install.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile --prefer-offline

      - name: deps
        run: yarn check:deps

      - name: package.json versions
        run: yarn check:package-json

  sizeDiff:
    name: Check file size
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache/restore@v3
        name: Restore yarn cache
        id: yarn-cache
        with:
          path: ${{ needs.install.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile --prefer-offline

      - uses: preactjs/compressed-size-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          clean-script: 'clean:builds && clean:modules'
          build-script: 'build:packages'

  build:
    name: Build packages
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache/restore@v3
        name: Restore yarn cache
        id: yarn-cache
        with:
          path: ${{ needs.install.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile --prefer-offline

      - uses: actions/cache@v3
        name: Check for build cache
        id: build-cache
        with:
          path: |
            **/dist
            !**/node_modules
          key: ${{ runner.os }}-build-cache-${{ hashFiles('**/rollup.config.js', '**/babel.config.js', '**/src/', '**/scripts/', '!**/node_modules', '!**/dist') }}

      - name: build
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        run: yarn build:packages

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [install, build]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache/restore@v3
        name: Restore yarn cache
        id: yarn-cache
        with:
          path: ${{ needs.install.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile --prefer-offline

      - uses: actions/cache/restore@v3
        name: Restore build cache
        id: build-cache
        with:
          path: |
            **/dist
            !**/node_modules
          key: ${{ runner.os }}-build-cache-${{ hashFiles('**/rollup.config.js', '**/babel.config.js', '**/src/', '**/scripts/', '!**/node_modules', '!**/dist') }}

      - name: tests
        run: yarn test --no-cache --ci --runInBand --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT: 'reports/junit/js-test-results.xml'

  tests-ssr:
    name: Run tests with artificial server rendering
    runs-on: ubuntu-latest
    needs: [install, build]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache/restore@v3
        name: Restore yarn cache
        id: yarn-cache
        with:
          path: ${{ needs.install.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile --prefer-offline

      - name: tests
        run: yarn test --ssr --no-cache --ci --runInBand --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT: 'reports/junit/js-test-ssr-results.xml'

  checkBuilds:
    name: Check builds
    runs-on: ubuntu-latest
    needs: [install, build]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache/restore@v3
        name: Restore yarn cache
        id: yarn-cache
        with:
          path: ${{ needs.install.outputs.yarn-cache-dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile --prefer-offline

      - name: check builds
        run: yarn check:builds
